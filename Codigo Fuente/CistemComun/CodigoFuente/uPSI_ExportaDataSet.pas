unit uPSI_ExportaDataSet;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ExportaDataSet = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TExportaDataSet(CL: TPSPascalCompiler);
procedure SIRegister_ExportaDataSet(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TExportaDataSet(CL: TPSRuntimeClassImporter);
procedure RIRegister_ExportaDataSet(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   DB
  ,ExportaDataSet
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ExportaDataSet]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TExportaDataSet(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TOBJECT', 'TExportaDataSet') do
  with CL.AddClassN(CL.FindClass('TOBJECT'),'TExportaDataSet') do
  begin
    RegisterProperty('ValorParametros', 'TFuncvalor', iptrw);
    RegisterProperty('Folios', 'TFuncFolio', iptrw);
    RegisterMethod('Constructor Create( ADataSet : TDataSet)');
    RegisterMethod('Function FormatFloat( AFormato : String; Valor : Double) : String');
    RegisterMethod('Function FormatDateTime( AFormato : String; Fecha : TDateTime) : String');
    RegisterMethod('Function Valor( ACampo : String) : Variant');
    RegisterMethod('Function ValorParametro( ACual : Integer) : Variant');
    RegisterMethod('Function Folio( ACampo, ASerie : String) : Integer');
    RegisterMethod('Function EOF : Boolean');
    RegisterMethod('Function Fecha : TDateTime');
    RegisterMethod('Function Derecha( ACad : String; Acpi : Integer) : String');
    RegisterMethod('Function SinGuiones( ACad : String) : String');
    RegisterMethod('Procedure Next');
    RegisterMethod('Procedure Agregar( ACad : String)');
    RegisterMethod('Procedure GuardaArchivo( ARuta : String)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_ExportaDataSet(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TFuncValor', 'Function ( ACual : Integer) : Variant');
  CL.AddTypeS('TFuncFolio', 'Function ( Campo, Serie : String) : Integer');
  SIRegister_TExportaDataSet(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TExportaDataSetFolios_W(Self: TExportaDataSet; const T: TFuncFolio);
begin Self.Folios := T; end;

(*----------------------------------------------------------------------------*)
procedure TExportaDataSetFolios_R(Self: TExportaDataSet; var T: TFuncFolio);
begin T := Self.Folios; end;

(*----------------------------------------------------------------------------*)
procedure TExportaDataSetValorParametros_W(Self: TExportaDataSet; const T: TFuncvalor);
begin Self.ValorParametros := T; end;

(*----------------------------------------------------------------------------*)
procedure TExportaDataSetValorParametros_R(Self: TExportaDataSet; var T: TFuncvalor);
begin T := Self.ValorParametros; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TExportaDataSet(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TExportaDataSet) do
  begin
    RegisterPropertyHelper(@TExportaDataSetValorParametros_R,@TExportaDataSetValorParametros_W,'ValorParametros');
    RegisterPropertyHelper(@TExportaDataSetFolios_R,@TExportaDataSetFolios_W,'Folios');
    RegisterConstructor(@TExportaDataSet.Create, 'Create');
    RegisterMethod(@TExportaDataSet.FormatFloat, 'FormatFloat');
    RegisterMethod(@TExportaDataSet.FormatDateTime, 'FormatDateTime');
    RegisterMethod(@TExportaDataSet.Valor, 'Valor');
    RegisterMethod(@TExportaDataSet.ValorParametro, 'ValorParametro');
    RegisterMethod(@TExportaDataSet.Folio, 'Folio');
    RegisterMethod(@TExportaDataSet.EOF, 'EOF');
    RegisterMethod(@TExportaDataSet.Fecha, 'Fecha');
    RegisterMethod(@TExportaDataSet.Derecha, 'Derecha');
    RegisterMethod(@TExportaDataSet.SinGuiones, 'SinGuiones');
    RegisterMethod(@TExportaDataSet.Next, 'Next');
    RegisterMethod(@TExportaDataSet.Agregar, 'Agregar');
    RegisterMethod(@TExportaDataSet.GuardaArchivo, 'GuardaArchivo');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ExportaDataSet(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TExportaDataSet(CL);
end;

 
 
{ TPSImport_ExportaDataSet }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ExportaDataSet.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ExportaDataSet(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ExportaDataSet.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ExportaDataSet(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
