unit ufrmCaja;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, CustomModule, ExtCtrls, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxContainer, cxEdit, dxSkinsCore, dxSkinBlack,
  dxSkinBlue, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinFoggy, dxSkinGlassOceans, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinPumpkin, dxSkinSeven,
  dxSkinSharp, dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinsDefaultPainters, dxSkinValentine, dxSkinXmas2008Blue, Menus, cxStyles,
  dxSkinscxPCPainter, cxCustomData, cxFilter, cxData, cxDataStorage, DB,
  cxDBData, cxGroupBox, cxCheckGroup, cxGridLevel, cxClasses, cxGridCustomView,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, cxGrid, cxTextEdit,
  StdCtrls, cxButtons, cxCurrencyEdit, cxRadioGroup, TB2Dock, TB2ToolWindow, TBX,
  cxMaskEdit, cxDropDownEdit, cxLookupEdit, cxDBLookupEdit, cxDBLookupComboBox,
  cxCalc, cxDBEdit, dxmdaset, uDAInterfaces, uDADataTable, uDAScriptingProvider,
  uDAMemDataTable, uDM, Modules, KDaoDataBase;

type
  TfrmCaja = class(TfrmCustomModule)
    Panel1: TPanel;
    Panel2: TPanel;
    cxGroupBox1: TcxGroupBox;
    Label10: TLabel;
    Label1: TLabel;
    edtIDPago: TcxCurrencyEdit;
    btnBuscaCliente: TcxButton;
    edtObservaciones: TcxTextEdit;
    cxGrid1: TcxGrid;
    cxGrid1DBTableView1: TcxGridDBTableView;
    cxGrid1DBTableView1idPago: TcxGridDBColumn;
    cxGrid1DBTableView1NumPago: TcxGridDBColumn;
    cxGrid1DBTableView1Fecha: TcxGridDBColumn;
    cxGrid1DBTableView1FechaPago: TcxGridDBColumn;
    cxGrid1DBTableView1Importe: TcxGridDBColumn;
    cxGrid1DBTableView1NumControl: TcxGridDBColumn;
    cxGrid1DBTableView1Intereses: TcxGridDBColumn;
    cxGrid1DBTableView1SubTipo: TcxGridDBColumn;
    cxGrid1DBTableView1Tipo: TcxGridDBColumn;
    cxGrid1Level1: TcxGridLevel;
    cxGroupBox2: TcxGroupBox;
    lblTotal: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    edtTotal: TcxCurrencyEdit;
    edtPago: TcxCurrencyEdit;
    edtCambio: TcxCurrencyEdit;
    rgMoneda: TcxRadioGroup;
    chbCheque: TcxCheckGroup;
    twCancela: TTBXToolWindow;
    twBuscaPago: TTBXToolWindow;
    cxGroupBox3: TcxGroupBox;
    Label7: TLabel;
    Label8: TLabel;
    edtNumControl: TcxCurrencyEdit;
    cxButton1: TcxButton;
    dbcCiclo: TcxLookupComboBox;
    twIntereses: TTBXToolWindow;
    tblPagos: TdxMemData;
    tblPagosidPago: TIntegerField;
    tblPagosNumPago: TIntegerField;
    tblPagosFecha: TDateTimeField;
    tblPagosFechaPago: TDateTimeField;
    tblPagosImporte: TFloatField;
    tblPagosNumControl: TStringField;
    tblPagosIntereses: TFloatField;
    tblPagosSubTipo: TStringField;
    tblPagosTipo: TStringField;
    cdsAlumnos: TDAMemDataTable;
    cdsHistorialAlumnos: TDAMemDataTable;
    cdsPagos: TDAMemDataTable;
    dsAlumnos: TDADataSource;
    dsHistorialAlumnos: TDADataSource;
    dsPagos1: TDADataSource;
    cdsPagosCaja: TDAMemDataTable;
    dsPagosCaja: TDADataSource;
    cdsConfiguracion: TDAMemDataTable;
    dsPagos: TDataSource;
    spCancelaCaja: TDAMemDataTable;
    cxGrid2: TcxGrid;
    cxGridDBTableView1: TcxGridDBTableView;
    cxGridDBTableView1IDPAGO: TcxGridDBColumn;
    cxGridDBTableView1NUMPAGO: TcxGridDBColumn;
    cxGridDBTableView1STATUS: TcxGridDBColumn;
    cxGridDBTableView1TIPOCODIGO: TcxGridDBColumn;
    cxGridDBTableView1SUBTIPOCODIGO: TcxGridDBColumn;
    cxGridDBTableView1FECHA: TcxGridDBColumn;
    cxGridDBTableView1FECHAPAGO: TcxGridDBColumn;
    cxGridDBTableView1EMPLEADOCODIGO: TcxGridDBColumn;
    cxGridDBTableView1IMPORTE: TcxGridDBColumn;
    cxGridDBTableView1INTERES: TcxGridDBColumn;
    cxGridDBTableView1TOTAL: TcxGridDBColumn;
    cxGridLevel1: TcxGridLevel;
    cxGroupBox4: TcxGroupBox;
    Label5: TLabel;
    edtFolio: TcxCurrencyEdit;
    edtObserva: TcxTextEdit;
    Label6: TLabel;
    btnAceptar: TcxButton;
    PopupMenu1: TPopupMenu;
    InteresManual1: TMenuItem;
    cxGroupBox5: TcxGroupBox;
    cxDBCalcEdit1: TcxDBCalcEdit;
    procedure FormCreate(Sender: TObject);
    procedure btnBuscaClienteClick(Sender: TObject);
    procedure BuscarAlumno;
    procedure BuscaPago(idAlumno : Integer; NumControl : String);
    procedure edtNumControlKeyPress(Sender: TObject; var Key: Char);
    procedure cxButton1Click(Sender: TObject);
    procedure cxGridDBTableView1DblClick(Sender: TObject);
    procedure edtIDPagoExit(Sender: TObject);
    procedure btnAceptarClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure cxGroupBox3Exit(Sender: TObject);
    procedure tblPagosAfterPost(DataSet: TDataSet);
    procedure edtPagoKeyPress(Sender: TObject; var Key: Char);
    procedure edtPagoPropertiesValidate(Sender: TObject;
      var DisplayValue: Variant; var ErrorText: TCaption; var Error: Boolean);
    procedure edtPagoPropertiesChange(Sender: TObject);
    procedure cxGroupBox4Exit(Sender: TObject);
    procedure InteresManual1Click(Sender: TObject);
    procedure cxGroupBox5Exit(Sender: TObject);
    procedure cxDBCalcEdit1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
    { Private declarations }

  protected
    { -------------------- }
    procedure UpdateActionsState; override;
    procedure RegisterActions; override;
  public
    { Public declarations }
    ID : Integer;
    Total : Real;
    Moneda : Monedas;
    procedure AgregarPago(idPago : Integer);
    procedure Totaliza(Monto : Real);

    procedure ActionNuevo(Action: TBasicAction);
    procedure ActionGuardar(Action: TBasicAction);
    procedure ActionEliminar(Action: TBasicAction);
    procedure ActionCancelar(Action: TBasicAction);
  end;

var
  frmCaja: TfrmCaja;

implementation
USES  ufrmBuscar, ufrmBuscarAlumno, dmActions, UtileriasComun;

{$R *.dfm}

procedure TfrmCaja.ActionCancelar(Action: TBasicAction);
begin
  tblPagos.Close;
  tblPagos.Open;
  tblPagos.Close;

  cxGroupBox1.Enabled:= False;
  if twBuscaPago.Visible then twBuscaPago.Visible:= False;
  
  UpdateActionsState;
end;

procedure TfrmCaja.ActionEliminar(Action: TBasicAction);
begin
  twCancela.Visible:=True;
  edtFolio.Text:='';
  edtObserva.Text:='';
  edtFolio.SetFocus;
end;

procedure TfrmCaja.ActionGuardar(Action: TBasicAction);
var
  aux : real;
  ok : boolean;
  s : string;
  NewID : Integer;
begin
  if (tblPagos.RecordCount < 1) then
  begin
    DM.Mensaje('Información',12, False, Informacion, []);
    Exit;
  end;
  aux:=edtPago.EditValue;

  if aux > 0 then
  begin
    if (aux < Total) and (DM.Mensaje('Información',10, True, Informacion, [])<>ID_YES) then
      exit;
    s:='';

    if chbCheque.States[0] = cbsChecked then
      s:=s+'[E]';
    if chbCheque.States[1] = cbsChecked then
      s:=s+'[T]';
    if chbCheque.States[2] = cbsChecked then
      s:=s+'[C]';
    if chbCheque.States[3] = cbsChecked then
      s:=s+'[B]';

    id:= DM.Servidor.InsertaCaja(edtObservaciones.Text,s,DM.EmpleadoID);
    tblPagos.First;

    while not tblPagos.Eof do
    begin
      ok:=False;
      NewID:=tblPagosidPago.AsInteger;

      if (tblPagosIntereses.AsFloat + tblPagosImporte.AsFloat) <= Aux then
      begin
        DM.Servidor.LiquidaPago(tblPagosIntereses.AsFloat,DM.EmpleadoID,tblPagosidPago.AsInteger);
        ok:=true;
      end
      else
      begin
        if (Aux > 0)  then
        begin
          NewID:= DM.Servidor.DividePago(tblPagosidPago.AsInteger,DM.EmpleadoID,Aux,tblPagosIntereses.AsFloat);
          Aux:=0;
          ok:=true;
        end;
      end;
      if ok then
      begin
        DM.Servidor.InsertaPagoCaja(NewID,id);
      end;
      tblPagos.Next;
    end;
    //btnCancelarClick(nil);
    ActionCancelar(nil);
    //-- envio del reporte de recibo del pago --//

    {repReciboCaja.Template.LoadFromDatabase;
    repReciboCaja.ShowAutoSearchDialog:=False;
    repReciboCaja.PrinterSetup.DocumentName:=Format('Recibo de Caja #%d', [id]);
    repReciboCaja.Print;}
  end
  else
    DM.Mensaje('Información', 11, False, Informacion, []);
end;

procedure TfrmCaja.ActionNuevo(Action: TBasicAction);
begin
  //Enabled(True);
  cxGroupBox1.Enabled:= True;
  tblPagos.Open;
  Total:=0;
  edtIDPago.SetFocus;
  edtObservaciones.Text:='';

  UpdateActionsState;
end;

procedure TfrmCaja.AgregarPago(idPago: Integer);
begin
  if not tblPagos.Locate('idPago', idPago, []) then
  begin
    cdsPagosCaja.Params[0].AsInteger:=idPago;
    cdsPagosCaja.Open;
    if cdsPagosCaja.RecordCount > 0 then
    begin
      if cdsPagosCaja.FieldByName('STATUS').AsString = 'P' then
        DM.Mensaje('Error', 4, False, Error, [])
      else
      begin
        tblPagos.Append;
        tblPagosidPago.AsInteger:=idPago;
        tblPagosNumPago.AsInteger:=cdsPagosCaja.FieldByName('NUMPAGO').AsInteger;
        tblPagosFecha.AsDateTime:=cdsPagosCaja.FieldByName('FECHA').AsDateTime;
        tblPagosFechaPago.AsDateTime:=cdsPagosCaja.FieldByName('FECHAPAGO').AsDateTime;
        tblPagosImporte.AsFloat:=cdsPagosCaja.FieldByName('IMPORTE').AsFloat;
        tblPagosSubTipo.AsString:=cdsPagosCaja.FieldByName('SUBTIPOCODIGO').AsString;
        tblPagosTipo.AsString:=cdsPagosCaja.FieldByName('TIPOCODIGO').AsString;
        tblPagosIntereses.AsFloat:=0;
        tblPagosNumControl.AsString:=cdsPagosCaja.FieldByName('ALUMNONUMCONTROL').AsString;
        tblPagos.Post;
      end;
    end
    else
      DM.Mensaje('Error', 3, False, Error, []);
    cdsPagosCaja.Close;
  end;
end;

procedure TfrmCaja.btnAceptarClick(Sender: TObject);
begin
  if DM.Mensaje('Confirmar', 34, True, Confirmar, [Trunc(edtFolio.Value)]) = ID_YES then
  begin
    spCancelaCaja.ParamByName('idCaja').AsInteger:=Trunc(edtFolio.Value);
    spCancelaCaja.ParamByName('idEmpleado').AsInteger:=DM.EmpleadoID;
    spCancelaCaja.ParamByName('Observaciones').AsString:=edtObserva.Text;
    spCancelaCaja.Open;
    if spCancelaCaja.FieldByName('RESULTADO').AsInteger = -1 then
      DM.Mensaje('Error', 33, False, Error, [Trunc(edtFolio.Value)]);
  end;
  twCancela.Visible:=False;
end;

procedure TfrmCaja.btnBuscaClienteClick(Sender: TObject);
begin
  inherited;
  twBuscaPago.Visible:=True;
  cdsPagos.Close;
  try
    edtNumControl.SetFocus;
  except
  end;
end;

procedure TfrmCaja.BuscaPago(idAlumno: Integer; NumControl: String);
begin
  cdsAlumnos.Close;
  cdsAlumnos.ParamByName('idAlumno').AsInteger:=idAlumno;
  cdsAlumnos.ParamByName('NumControl').AsString:='%'+NumControl+'%';
  cdsAlumnos.Open;
  cdsHistorialAlumnos.Close;
  cdsHistorialAlumnos.Open;
  cdsHistorialAlumnos.Locate('idCiclo', cdsConfiguracion.FieldByName('CICLOACTUAL').AsInteger, []);
  dbcCiclo.EditValue:=cdsHistorialAlumnos.FieldByName('IDHISTORIALALUMNO').AsInteger;
  cdsPagos.Close;
  cdsPagos.ParamByName('IDHISTORIALALUMNO').AsInteger:= cdsHistorialAlumnos.FieldByName('IDHISTORIALALUMNO').AsInteger;
  cdsPagos.Open;
  edtNumControl.Text:= cdsAlumnos.FieldByName('NUMCONTROL').AsString;
  twBuscaPago.Caption:='Buscar pagos - ' + cdsAlumnos.FieldByName('NOMBRE').AsString;
end;

procedure TfrmCaja.BuscarAlumno;
var
   Datos: TDatosBusqueda;
begin
   Datos:=PantallaBusqueda(TfrmBuscarAlumno,'');
   if Datos.OK then
   begin
      BuscaPago(Datos.Clave, '@');
   end;
end;

procedure TfrmCaja.cxButton1Click(Sender: TObject);
begin
  inherited;
  BuscarAlumno;
end;

procedure TfrmCaja.cxDBCalcEdit1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if key = vk_return then
  begin
    key:=0;
    cxGrid1.SetFocus;
    twIntereses.Visible:=False;
    cdsPagos.Refresh;
  end;
end;

procedure TfrmCaja.cxGridDBTableView1DblClick(Sender: TObject);
begin
  inherited;
  if cdsPagos.State = dsBrowse then
     AgregarPago(cdsPagos.FieldByName('IDPAGO').AsInteger);

  twBuscaPago.Visible:= False;
end;

procedure TfrmCaja.cxGroupBox3Exit(Sender: TObject);
begin
  inherited;
  twBuscaPago.Visible:= False;
end;

procedure TfrmCaja.cxGroupBox4Exit(Sender: TObject);
begin
  inherited;
  twCancela.Visible:= False;
end;

procedure TfrmCaja.cxGroupBox5Exit(Sender: TObject);
begin
  inherited;
  twIntereses.Visible:= False;

end;

procedure TfrmCaja.edtIDPagoExit(Sender: TObject);
begin
  inherited;
  if (edtIDPago.Text <> '') and (edtIDPago.Text <> '0') then
  begin
    AgregarPago(StrToInt(edtIDPago.Text));
    edtIDPago.SelectAll;
    //edtIDPago.SetFocus;
  end;
end;

procedure TfrmCaja.edtNumControlKeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
  BuscarAlumno;
end;

procedure TfrmCaja.edtPagoKeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
  if (Key = '.') and (Pos('.', edtPago.Text) > 0) then
    Key:=#0;
  if not (key in ['0'..'9','.', #8]) then
    key:=#0;
end;

procedure TfrmCaja.edtPagoPropertiesChange(Sender: TObject);
begin
  inherited;
  Totaliza(0);
end;

procedure TfrmCaja.edtPagoPropertiesValidate(Sender: TObject;
  var DisplayValue: Variant; var ErrorText: TCaption; var Error: Boolean);
begin
  inherited;
  edtTotal.Text:=edtTotal.Text;
end;

procedure TfrmCaja.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  inherited;
  CanClose:=True;
  if dmAppActions.actGuardar.Enabled then
    case DM.Mensaje('Información', 13, True, Informacion, []) of
      ID_CANCEL : ;
      ID_YES : CanClose:=False;
    end;
end;

procedure TfrmCaja.FormCreate(Sender: TObject);
begin
  inherited;
  Moneda:=Pesos;
  DM.IniciaVentana(twBuscaPago);
  DM.IniciaVentana(twIntereses);
  DM.IniciaVentana(twCancela);

  cdsConfiguracion.Close;
  cdsConfiguracion.Open;
  
end;


procedure TfrmCaja.InteresManual1Click(Sender: TObject);
begin
  inherited;
  if (tblPagos.RecordCount > 0) then
     twIntereses.Visible:=True;
end;

procedure TfrmCaja.RegisterActions;
begin
  inherited;
  RegisterAction(AppActions.actNuevo, ActionNuevo);
  RegisterAction(AppActions.actGuardar, ActionGuardar);
  RegisterAction(AppActions.actEliminar, ActionEliminar);
  RegisterAction(AppActions.actCancelar, ActionCancelar);
end;

procedure TfrmCaja.tblPagosAfterPost(DataSet: TDataSet);
var
  i : Integer;
begin
  inherited;
  i:=tblPagosidPago.AsInteger;
  tblPagos.First;
  Total:=0;
  while not tblPagos.Eof do
  begin
    Total:= Total + tblPagos.FieldByName('Importe').AsFloat + tblPagos.FieldByName('Intereses').AsFloat;
    tblPagos.Next;
  end;
  tblPagos.Locate('idPago', i, []);
  Totaliza(0);
end;

procedure TfrmCaja.Totaliza(Monto: Real);
var
  Aux : Real;
  i : Integer;
begin
  if Moneda = Pesos then i:= 1;
  if Moneda = Dolares then i:= 2;
  
  Aux:=Total;
  if Moneda = Dolares then
    Aux:=Aux / cdsConfiguracion.FieldByName('TIPOCAMBIO').AsFloat;
  edtTotal.EditValue:= Aux;
  lblTotal.Caption:='Son: ' + NumeroATexto(Aux, i);
  edtCambio.EditValue:=(edtPago.EditValue - Aux);
  edtCambio.Style.Color:= clWindowText;
  if (edtPago.EditValue - Aux) < 0 then
    edtCambio.Style.Color:=clRed;
end;

procedure TfrmCaja.UpdateActionsState;
begin
  inherited;
  dmAppActions.actGuardar.Enabled:= ((cxGroupBox1.Enabled));
  dmAppActions.actCancelar.Enabled:= (cxGroupBox1.Enabled);
  dmAppActions.actNuevo.Enabled:= (cxGroupBox1.Enabled = False);
  dmAppActions.actEliminar.Enabled:=(cxGroupBox1.Enabled);
end;

initialization
  ModuleInfoManager.RegisterModule('Caja', TfrmCaja);

end.
