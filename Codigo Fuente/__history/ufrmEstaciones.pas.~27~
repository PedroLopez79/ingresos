unit ufrmEstaciones;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ufrmCatalogo, cxStyles, cxCustomData, cxGraphics, cxFilter, cxData,
  cxDataStorage, cxEdit, DB, cxDBData, cxLabel, cxTextEdit, cxDBEdit,
  cxContainer, cxGroupBox, dxmdaset, uDADataTable, uDAScriptingProvider,
  uDACDSDataTable, cxGridLevel, cxClasses, cxControls, cxGridCustomView,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, cxGrid, cxPC,
  dxSkinsCore, dxSkinsDefaultPainters, dxSkinscxPCPainter, uDAInterfaces,
  uDAMemDataTable, dxSkinBlack, dxSkinBlue, dxSkinBlueprint, dxSkinCaramel,
  dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide, dxSkinDevExpressDarkStyle,
  dxSkinDevExpressStyle, dxSkinFoggy, dxSkinGlassOceans, dxSkinHighContrast,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinMetropolis, dxSkinMetropolisDark, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinPumpkin, dxSkinSeven,
  dxSkinSevenClassic, dxSkinSharp, dxSkinSharpPlus, dxSkinSilver,
  dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008, dxSkinTheAsphaltWorld,
  dxSkinValentine, dxSkinVS2010, dxSkinWhiteprint, dxSkinXmas2008Blue,
  cxPCdxBarPopupMenu, cxLookAndFeels, cxLookAndFeelPainters, cxNavigator,
  uDAFields, uROComponent, cxImage, Vcl.StdCtrls, Vcl.ExtDlgs;

type
  TFrmEstaciones = class(TfrmCatalogo)
    GrpBoxDatos: TcxGroupBox;
    TxtNoEstacion: TcxDBTextEdit;
    LblNoEstacion: TcxLabel;
    LblDireccion: TcxLabel;
    LblRFC: TcxLabel;
    LblHost: TcxLabel;
    LblNombre: TcxLabel;
    TxtNombre: TcxDBTextEdit;
    TxtDireccion: TcxDBTextEdit;
    TxtRFC: TcxDBTextEdit;
    TxtHost: TcxDBTextEdit;
    cxDBTextEdit1: TcxDBTextEdit;
    cxLabel1: TcxLabel;
    LblCuentaContable: TcxLabel;
    TxtCuentaContable: TcxDBTextEdit;
    TxtIva: TcxDBTextEdit;
    LblImpuento: TcxLabel;
    cxLabel2: TcxLabel;
    cxDBTextEdit2: TcxDBTextEdit;
    dbgCatalogoDBTableView1EstacionID: TcxGridDBColumn;
    dbgCatalogoDBTableView1Nombre: TcxGridDBColumn;
    dbgCatalogoDBTableView1RazonSocial: TcxGridDBColumn;
    dbgCatalogoDBTableView1RFC: TcxGridDBColumn;
    dbgCatalogoDBTableView1Colonia: TcxGridDBColumn;
    dbgCatalogoDBTableView1Ciudad: TcxGridDBColumn;
    dbgCatalogoDBTableView1CodigoPostal: TcxGridDBColumn;
    dbgCatalogoDBTableView1Host: TcxGridDBColumn;
    dbgCatalogoDBTableView1CuentaContable: TcxGridDBColumn;
    dbgCatalogoDBTableView1Impuesto: TcxGridDBColumn;
    cxLabel3: TcxLabel;
    cxDBTextEdit3: TcxDBTextEdit;
    cxDBTextEdit4: TcxDBTextEdit;
    cxLabel4: TcxLabel;
    cxDBImage1: TcxDBImage;
    cxLabel5: TcxLabel;
    Button1: TButton;
    OpenPictureDialog1: TOpenPictureDialog;
    procedure cdsCatalogoNewRecord(DataTable: TDADataTable);
    procedure TxtIvaExit(Sender: TObject);
    procedure TxtRFCExit(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmEstaciones: TFrmEstaciones;

implementation

uses Modules, uDM, UtileriasComun, jpeg;

{$R *.dfm}

procedure TFrmEstaciones.Button1Click(Sender: TObject);
var
  Jpg : TPicture;
  S : TMemoryStream;
begin
  inherited;
  if OpenPictureDialog1.Execute then
    { First check if the file exists. }
    if FileExists(OpenPictureDialog1.FileName) then
    begin
      Jpg := TPicture.Create;
      S := TMemoryStream.Create;
      cxDBImage1.Picture.LoadFromFile(OpenPictureDialog1.FileName);
      cxDBImage1.Picture.Graphic.SaveToStream(S);
      //Jpg.LoadFromFile(OpenPictureDialog1.FileName);
      { If it exists, load the data into the image component. }
      //Image1.Picture.LoadFromFile(OpenPictureDialog1.FileName)

      cdsCatalogo.FieldByName('LOGOESTACION').LoadFromStream(S);
      //cxDBImage1.Picture.Assign(Jpg);
    end
    else
      { Otherwise raise an exception. }
      raise Exception.Create('File does not exist.');
end;

procedure TFrmEstaciones.cdsCatalogoNewRecord(DataTable: TDADataTable);
begin
  inherited;
  TxtNoEstacion.SetFocus;
end;

procedure TFrmEstaciones.TxtIvaExit(Sender: TObject);
begin
  inherited;
  if not isNumeric(txtIVA.Text) then
  begin
    showMessage('No Es Un Numero');
    txtIVa.Clear;
    txtIva.SetFocus;
  end;
end;

procedure TFrmEstaciones.TxtRFCExit(Sender: TObject);
begin
  inherited;
  if not DM.ValidaRFC(TxtRFC.Text) then
  begin
    ShowMessage('El RFC no debe de llevar Espacios ni Guiones(-)');
    txtRFC.SetFocus;
  end;
end;

initialization
  ModuleInfoManager.RegisterModule('Estaciones', TFrmEstaciones);
end.
