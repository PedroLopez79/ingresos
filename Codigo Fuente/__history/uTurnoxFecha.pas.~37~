unit uTurnoxFecha;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, DateUtils, cxGraphics, cxLookAndFeels,
  cxLookAndFeelPainters, Menus, dxSkinsCore, dxSkinBlack, dxSkinBlue,
  dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide, dxSkinFoggy,
  dxSkinGlassOceans, dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky,
  dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinPumpkin, dxSkinSeven, dxSkinSharp, dxSkinSilver,
  dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008, dxSkinsDefaultPainters,
  dxSkinValentine, dxSkinXmas2008Blue, cxButtons, ComCtrls, LibraryIngresos_Intf,
  uDAScriptingProvider, uDADataTable, uDAMemDataTable, uROComponent,
  uDACDSDataTable, uDADataAdapter, uDARemoteDataAdapter;

type
  TFo_TurnoxFecha = class(TForm)
    Panel1: TPanel;
    Pa_ayuda: TPanel;
    Label6: TLabel;
    Bevel1: TBevel;
    CBB_Turnos: TComboBox;
    Button2: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    rdaObtenTurno: TDARemoteDataAdapter;
    cdsObtenTurno: TDACDSDataTable;
    procedure CBB_TurnosChange(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
    IDTURNO: Integer;
  public
    { Public declarations }
  end;

var
  Fo_TurnoxFecha: TFo_TurnoxFecha;

function Abrir_ModuloTurnoxFecha(TurnoxFecha: ATTurnoxFecha):Integer;

implementation
uses  uDM;

{$R *.dfm}

function Abrir_ModuloTurnoxFecha(TurnoxFecha: ATTurnoxFecha):Integer;
var
  i:Integer;
Begin
  Fo_TurnoxFecha:=TFo_TurnoxFecha.Create(Application);
  TFo_TurnoxFecha.IDTURNO:= -1;
  i:= TurnoxFecha.Count;

  for i := 0 to TurnoxFecha.Count - 1 do
  begin
    Fo_TurnoxFecha.CBB_Turnos.Items.Add(inttostr(TurnoxFecha.Items[i].IDTURNO));
  end;

  //Fo_ayudaRFC.Ed_ApellidoPat.Text:= APELLIDOP;
  //Fo_ayudaRFC.Ed_ApellidoMat.Text:= APELLIDOM;
  //Fo_ayudaRFC.Ed_Nombre.Text:= NOMBRES;
  //Fo_ayudaRFC.FechaNac.Date:= FECHANAC;

  Fo_TurnoxFecha.ShowModal;

  Result:= strtoint(Fo_TurnoxFecha.Label4.Caption);
  Fo_TurnoxFecha.Free;
End;

procedure TFo_TurnoxFecha.Button2Click(Sender: TObject);
begin
  if (IDTURNO > 0) then
  begin

  end;
  Fo_TurnoxFecha.Close;
end;

procedure TFo_TurnoxFecha.CBB_TurnosChange(Sender: TObject);
var
  S: String;
  P: TParametrosBI;
begin
  if CBB_Turnos.Text = 'AGREGAR UNA SECUENCIA...' then
  begin
    Try
    P:= TParametrosBI.Create;
    P.NumeroEstacion:= DM.NumeroEstacion;
    S:= 'SELECT ISNULL(MAX(IDTURNO),0) + 1 AS IDTURNO FROM INGRESOS WHERE NUMEROESTACION= @NUMEROESTACION';
        rdaObtenTurno.GetDataCall.ParamByName('SQL').AsString:=S;
        rdaObtenTurno.GetDataCall.ParamByName('Parametros').AsComplexType:= P;
        cdsObtenTurno.Open;

    IDTURNO:= cdsObtenTurno.FieldByName('IDTURNO').AsInteger;
    label4.Caption:= cdsObtenTurno.FieldByName('IDTURNO').AsString;

    Label5.Visible:= True;
    Label4.Visible:= True;
    Finally
      P.Free;
    End;
  end else
  begin
    Label5.Visible:= False;
    Label4.Visible:= False;
  end;

end;

end.
