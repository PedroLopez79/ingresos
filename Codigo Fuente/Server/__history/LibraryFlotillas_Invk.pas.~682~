unit LibraryFlotillas_Invk;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ Do not modify this unit manually, or your changes will be lost when this   }
{ unit is regenerated the next time you compile the project.                 }
{----------------------------------------------------------------------------}

{$I Remobjects.inc}

interface

uses
  {vcl:} Classes,
  {RemObjects:} uROXMLIntf, uROServer, uROServerIntf, uROTypes, uROClientIntf,
  {Used RODL Intf's:} DataAbstract4_Intf,
  {Used RODL Invk's:} DataAbstract4_Invk,
  {Generated:} LibraryFlotillas_Intf;

type
  TServiceFlotillas_Invoker = class(TDataAbstractService_Invoker)
  private
  protected
  public
    constructor Create; override;
  published
    procedure Invoke_AbreDataSetReportes(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaHistorial(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AfectarMovimientos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AfectarSaldoDocumento(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AgregaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AgregaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_RegistraPagosFaltantes(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AutorizaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Bancaria(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaAutorizacionTajeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscarReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CambioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelaGrupo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelarCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelarLote(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CaracteresCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CierrePeriodo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ClaveACupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DocumentosConSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaAutorizacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaAutorizacionVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaVehiculoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaRecibo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Fecha(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Folio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GasolineroID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GasolineroNombre(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GeneraCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GenerarFacturas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaAccesos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaAutorizacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaBitacora(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ModificarFolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenCuponValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_QuemarCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ReferenciaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Series(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_StatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TarjetaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TarjetasLLave(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_VehiculoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_REDConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_REDAutorizaciones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PrecioProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TiempoAire(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CashBack(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_IVAEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosClienteOtros(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ClasificacionCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ClasificacionVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Clasificacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosVerifica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosVerificaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Rendimiento(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosVerifone(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CambiaNIP(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CambiaClienteConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CuponManual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GeneraFacturasXCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ClienteCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_QuemarCupon_Manual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GeneraFacturasXClienteCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DocumentosCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AroVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FolioActual2(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosMonedero(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CadenaOriginal(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GOBCHIP(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaBitacoraGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarConsumoGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosUnidadesGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EnviaDatosFacturaGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AutorizaGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
  end;

implementation

uses
  {RemObjects:} uRORes, uROClient;

{ TServiceFlotillas_Invoker }

constructor TServiceFlotillas_Invoker.Create;
begin
  inherited Create;
  FAbstract := False;
end;

procedure TServiceFlotillas_Invoker.Invoke_AbreDataSetReportes(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AbreDataSetReportes(const SQL: AnsiString; const Parametros: TParametrosF): Binary; }
var
  SQL: AnsiString;
  Parametros: LibraryFlotillas_Intf.TParametrosF;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  Parametros := nil;
  lResult := nil;
  try
    __Message.Read('SQL', TypeInfo(AnsiString), SQL, []);
    __Message.Read('Parametros', TypeInfo(LibraryFlotillas_Intf.TParametrosF), Parametros, []);

    lResult := (__Instance as IServiceFlotillas).AbreDataSetReportes(SQL, Parametros);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AbreDataSetReportesResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Parametros);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ActualizaHistorial(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaHistorial(const Consumo: TConsumo); }
var
  Consumo: LibraryFlotillas_Intf.TConsumo;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryFlotillas_Intf.TConsumo), Consumo, []);

    (__Instance as IServiceFlotillas).ActualizaHistorial(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ActualizaHistorialResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_AfectarMovimientos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AfectarMovimientos(const Movimiento: TMovimiento): Boolean; }
var
  Movimiento: LibraryFlotillas_Intf.TMovimiento;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Movimiento := nil;
  try
    __Message.Read('Movimiento', TypeInfo(LibraryFlotillas_Intf.TMovimiento), Movimiento, []);

    lResult := (__Instance as IServiceFlotillas).AfectarMovimientos(Movimiento);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AfectarMovimientosResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Movimiento);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_AfectarSaldoDocumento(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AfectarSaldoDocumento(const SaldoDocumento: TSaldoDocumento): Boolean; }
var
  SaldoDocumento: LibraryFlotillas_Intf.TSaldoDocumento;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  SaldoDocumento := nil;
  try
    __Message.Read('SaldoDocumento', TypeInfo(LibraryFlotillas_Intf.TSaldoDocumento), SaldoDocumento, []);

    lResult := (__Instance as IServiceFlotillas).AfectarSaldoDocumento(SaldoDocumento);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AfectarSaldoDocumentoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(SaldoDocumento);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_AgregaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure AgregaReferencia(const VehiculoID: Integer; const Tipo: Integer; const Referencia: AnsiString); }
var
  VehiculoID: Integer;
  Tipo: Integer;
  Referencia: AnsiString;
begin
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('Tipo', TypeInfo(Integer), Tipo, []);
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    (__Instance as IServiceFlotillas).AgregaReferencia(VehiculoID, Tipo, Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AgregaReferenciaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_AgregaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AgregaSecuencias(const Consumos: aConsumo): Boolean; }
var
  Consumos: LibraryFlotillas_Intf.aConsumo;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumos := nil;
  try
    __Message.Read('Consumos', TypeInfo(LibraryFlotillas_Intf.aConsumo), Consumos, []);

    lResult := (__Instance as IServiceFlotillas).AgregaSecuencias(Consumos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AgregaSecuenciasResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumos);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_RegistraPagosFaltantes(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function RegistraPagosFaltantes(const SaldoDocumentoID: Integer; const Fecha: DateTime; const FechaVencimiento: DateTime; const Cargo: Double; 
                                    const Abono: Double; const Referencia: AnsiString; const ClienteID: Integer; const MovimientoID: Integer; 
                                    const ReciboID: Integer; const BancoID: Integer; const Folio: Integer; const Ejercicio: Integer; const Periodo: Integer; 
                                    const Cheque: AnsiString; const Importe: Double; const CuentaContableCliente: AnsiString; const UsuarioID: Integer; 
                                    const EstacionID: Integer): Integer; }
var
  SaldoDocumentoID: Integer;
  Fecha: DateTime;
  FechaVencimiento: DateTime;
  Cargo: Double;
  Abono: Double;
  Referencia: AnsiString;
  ClienteID: Integer;
  MovimientoID: Integer;
  ReciboID: Integer;
  BancoID: Integer;
  Folio: Integer;
  Ejercicio: Integer;
  Periodo: Integer;
  Cheque: AnsiString;
  Importe: Double;
  CuentaContableCliente: AnsiString;
  UsuarioID: Integer;
  EstacionID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('SaldoDocumentoID', TypeInfo(Integer), SaldoDocumentoID, []);
    __Message.Read('Fecha', TypeInfo(DateTime), Fecha, [paIsDateTime]);
    __Message.Read('FechaVencimiento', TypeInfo(DateTime), FechaVencimiento, [paIsDateTime]);
    __Message.Read('Cargo', TypeInfo(Double), Cargo, []);
    __Message.Read('Abono', TypeInfo(Double), Abono, []);
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('MovimientoID', TypeInfo(Integer), MovimientoID, []);
    __Message.Read('ReciboID', TypeInfo(Integer), ReciboID, []);
    __Message.Read('BancoID', TypeInfo(Integer), BancoID, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('Ejercicio', TypeInfo(Integer), Ejercicio, []);
    __Message.Read('Periodo', TypeInfo(Integer), Periodo, []);
    __Message.Read('Cheque', TypeInfo(AnsiString), Cheque, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('CuentaContableCliente', TypeInfo(AnsiString), CuentaContableCliente, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceFlotillas).RegistraPagosFaltantes(SaldoDocumentoID, Fecha, FechaVencimiento, Cargo, Abono, Referencia, ClienteID, MovimientoID, ReciboID, BancoID, Folio, Ejercicio, Periodo, Cheque, Importe, CuentaContableCliente, UsuarioID, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'RegistraPagosFaltantesResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_AutorizaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AutorizaTarjeta(const Autoriza: TAutoriza): TTarjeta; }
var
  Autoriza: LibraryFlotillas_Intf.TAutoriza;
  lResult: LibraryFlotillas_Intf.TTarjeta;
  __lObjectDisposer: TROObjectDisposer;
begin
  Autoriza := nil;
  lResult := nil;
  try
    __Message.Read('Autoriza', TypeInfo(LibraryFlotillas_Intf.TAutoriza), Autoriza, []);

    lResult := (__Instance as IServiceFlotillas).AutorizaTarjeta(Autoriza);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AutorizaTarjetaResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TTarjeta), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Autoriza);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_Bancaria(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Bancaria(const Terminal: AnsiString; const Supervisor: AnsiString; const BombaID: Integer; const EstacionID: Integer; 
                      const Track1: AnsiString; const Track2: AnsiString; const Importe: Double; const Ticket: Integer; const Serie: AnsiString; 
                      const Comision: Double; const BancariaTipoID: Integer; const CajaID: Integer): TBancaria; }
var
  Terminal: AnsiString;
  Supervisor: AnsiString;
  BombaID: Integer;
  EstacionID: Integer;
  Track1: AnsiString;
  Track2: AnsiString;
  Importe: Double;
  Ticket: Integer;
  Serie: AnsiString;
  Comision: Double;
  BancariaTipoID: Integer;
  CajaID: Integer;
  lResult: LibraryFlotillas_Intf.TBancaria;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Terminal', TypeInfo(AnsiString), Terminal, []);
    __Message.Read('Supervisor', TypeInfo(AnsiString), Supervisor, []);
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Track1', TypeInfo(AnsiString), Track1, []);
    __Message.Read('Track2', TypeInfo(AnsiString), Track2, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('Ticket', TypeInfo(Integer), Ticket, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Comision', TypeInfo(Double), Comision, []);
    __Message.Read('BancariaTipoID', TypeInfo(Integer), BancariaTipoID, []);
    __Message.Read('CajaID', TypeInfo(Integer), CajaID, []);

    lResult := (__Instance as IServiceFlotillas).Bancaria(Terminal, Supervisor, BombaID, EstacionID, Track1, Track2, Importe, Ticket, Serie, Comision, BancariaTipoID, CajaID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'BancariaResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TBancaria), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_BuscaAutorizacionTajeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaAutorizacionTajeta(const ClienteID: Integer; const VehiculoID: Integer; const GasolineroID: Integer): Boolean; }
var
  ClienteID: Integer;
  VehiculoID: Integer;
  GasolineroID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('GasolineroID', TypeInfo(Integer), GasolineroID, []);

    lResult := (__Instance as IServiceFlotillas).BuscaAutorizacionTajeta(ClienteID, VehiculoID, GasolineroID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'BuscaAutorizacionTajetaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_BuscarReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscarReporte(const Nombre: AnsiString): TReporteF; }
var
  Nombre: AnsiString;
  lResult: LibraryFlotillas_Intf.TReporteF;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Nombre', TypeInfo(AnsiString), Nombre, []);

    lResult := (__Instance as IServiceFlotillas).BuscarReporte(Nombre);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'BuscarReporteResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TReporteF), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CambioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CambioFactura(const Serie: AnsiString; const Folio: Integer; const NevaSerie: AnsiString; const NuevoFolio: Integer; 
                           const FechaImpresion: DateTime): AnsiString; }
var
  Serie: AnsiString;
  Folio: Integer;
  NevaSerie: AnsiString;
  NuevoFolio: Integer;
  FechaImpresion: DateTime;
  lResult: AnsiString;
begin
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('NevaSerie', TypeInfo(AnsiString), NevaSerie, []);
    __Message.Read('NuevoFolio', TypeInfo(Integer), NuevoFolio, []);
    __Message.Read('FechaImpresion', TypeInfo(DateTime), FechaImpresion, [paIsDateTime]);

    lResult := (__Instance as IServiceFlotillas).CambioFactura(Serie, Folio, NevaSerie, NuevoFolio, FechaImpresion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CambioFacturaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CancelaGrupo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelaGrupo(const Grupo: Integer): Boolean; }
var
  Grupo: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('Grupo', TypeInfo(Integer), Grupo, []);

    lResult := (__Instance as IServiceFlotillas).CancelaGrupo(Grupo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CancelaGrupoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CancelarCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelarCupones(const Lista: AnsiString; const UsuarioID: Integer): AnsiString; }
var
  Lista: AnsiString;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('Lista', TypeInfo(AnsiString), Lista, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceFlotillas).CancelarCupones(Lista, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CancelarCuponesResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CancelarLote(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelarLote(const LoteID: Integer; const UsuarioID: Integer): AnsiString; }
var
  LoteID: Integer;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('LoteID', TypeInfo(Integer), LoteID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceFlotillas).CancelarLote(LoteID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CancelarLoteResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CaracteresCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CaracteresCupon: AnsiString; }
var
  lResult: AnsiString;
begin
  try
    lResult := (__Instance as IServiceFlotillas).CaracteresCupon;

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CaracteresCuponResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CierrePeriodo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CierrePeriodo(const Periodo: Integer; const Ejercicio: Integer; const UsuarioID: Integer): Boolean; }
var
  Periodo: Integer;
  Ejercicio: Integer;
  UsuarioID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('Periodo', TypeInfo(Integer), Periodo, []);
    __Message.Read('Ejercicio', TypeInfo(Integer), Ejercicio, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceFlotillas).CierrePeriodo(Periodo, Ejercicio, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CierrePeriodoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ClaveACupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ClaveACupon(const Clave: AnsiString): Integer; }
var
  Clave: AnsiString;
  lResult: Integer;
begin
  try
    __Message.Read('Clave', TypeInfo(AnsiString), Clave, []);

    lResult := (__Instance as IServiceFlotillas).ClaveACupon(Clave);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ClaveACuponResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosCliente(const ClienteID: Integer): TCliente; }
var
  ClienteID: Integer;
  lResult: LibraryFlotillas_Intf.TCliente;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceFlotillas).DatosCliente(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosClienteResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TCliente), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosFactura(const Folio: Integer; const Serie: AnsiString): Boolean; }
var
  Folio: Integer;
  Serie: AnsiString;
  lResult: Boolean;
begin
  try
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceFlotillas).DatosFactura(Folio, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosFacturaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosVehiculo(const VehiculoID: Integer): TDatosVehiculo; }
var
  VehiculoID: Integer;
  lResult: LibraryFlotillas_Intf.TDatosVehiculo;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);

    lResult := (__Instance as IServiceFlotillas).DatosVehiculo(VehiculoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosVehiculoResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDatosVehiculo), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DocumentosConSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DocumentosConSaldo(const ClienteID: Integer): TDocumentosConSaldoArray; }
var
  ClienteID: Integer;
  lResult: LibraryFlotillas_Intf.TDocumentosConSaldoArray;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceFlotillas).DocumentosConSaldo(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DocumentosConSaldoResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDocumentosConSaldoArray), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_EliminaAutorizacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure EliminaAutorizacion(const AutorizacionID: Integer); }
var
  AutorizacionID: Integer;
begin
  try
    __Message.Read('AutorizacionID', TypeInfo(Integer), AutorizacionID, []);

    (__Instance as IServiceFlotillas).EliminaAutorizacion(AutorizacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'EliminaAutorizacionResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_EliminaAutorizacionVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EliminaAutorizacionVehiculo(const Referencia: AnsiString): Boolean; }
var
  Referencia: AnsiString;
  lResult: Boolean;
begin
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceFlotillas).EliminaAutorizacionVehiculo(Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'EliminaAutorizacionVehiculoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_EliminaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EliminaFactura(const Folio: Integer; const Serie: AnsiString): Boolean; }
var
  Folio: Integer;
  Serie: AnsiString;
  lResult: Boolean;
begin
  try
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceFlotillas).EliminaFactura(Folio, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'EliminaFacturaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_EliminaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure EliminaReferencia(const VehiculoID: Integer; const Tipo: Integer); }
var
  VehiculoID: Integer;
  Tipo: Integer;
begin
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('Tipo', TypeInfo(Integer), Tipo, []);

    (__Instance as IServiceFlotillas).EliminaReferencia(VehiculoID, Tipo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'EliminaReferenciaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_EliminaVehiculoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure EliminaVehiculoProducto(const VehiculoID: Integer; const ProductoID: Integer); }
var
  VehiculoID: Integer;
  ProductoID: Integer;
begin
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    (__Instance as IServiceFlotillas).EliminaVehiculoProducto(VehiculoID, ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'EliminaVehiculoProductoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_FacturaRecibo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaRecibo(const Cliente: Integer; const Importe: Double; const EstacionID: Integer; const EmpleadoID: Integer; 
                           const SerieFactura: AnsiString; const ProductoID: Integer): Integer; }
var
  Cliente: Integer;
  Importe: Double;
  EstacionID: Integer;
  EmpleadoID: Integer;
  SerieFactura: AnsiString;
  ProductoID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('Cliente', TypeInfo(Integer), Cliente, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);
    __Message.Read('SerieFactura', TypeInfo(AnsiString), SerieFactura, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceFlotillas).FacturaRecibo(Cliente, Importe, EstacionID, EmpleadoID, SerieFactura, ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'FacturaReciboResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_FacturaEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaEstacion(const DatosFactura: TDatosFactura; const EstacionID: Integer): Integer; }
var
  DatosFactura: LibraryFlotillas_Intf.TDatosFactura;
  EstacionID: Integer;
  lResult: Integer;
  __lObjectDisposer: TROObjectDisposer;
begin
  DatosFactura := nil;
  try
    __Message.Read('DatosFactura', TypeInfo(LibraryFlotillas_Intf.TDatosFactura), DatosFactura, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceFlotillas).FacturaEstacion(DatosFactura, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'FacturaEstacionResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFactura);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_FacturaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaCupon(const Cliente: Integer; const Importe: Double; const EstacionID: Integer; const EmpleadoID: Integer; 
                          const SerieFactura: AnsiString): Integer; }
var
  Cliente: Integer;
  Importe: Double;
  EstacionID: Integer;
  EmpleadoID: Integer;
  SerieFactura: AnsiString;
  lResult: Integer;
begin
  try
    __Message.Read('Cliente', TypeInfo(Integer), Cliente, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);
    __Message.Read('SerieFactura', TypeInfo(AnsiString), SerieFactura, []);

    lResult := (__Instance as IServiceFlotillas).FacturaCupon(Cliente, Importe, EstacionID, EmpleadoID, SerieFactura);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'FacturaCuponResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_Fecha(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Fecha: DateTime; }
var
  lResult: DateTime;
begin
  try
    lResult := (__Instance as IServiceFlotillas).Fecha;

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'FechaResponse');
    __Message.Write('Result', TypeInfo(DateTime), lResult, [paIsDateTime]);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_Folio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Folio(const Campo: AnsiString; const Serie: AnsiString): Integer; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  lResult: Integer;
begin
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceFlotillas).Folio(Campo, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'FolioResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GasolineroID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GasolineroID: Integer; }
var
  lResult: Integer;
begin
  try
    lResult := (__Instance as IServiceFlotillas).GasolineroID;

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GasolineroIDResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GasolineroNombre(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GasolineroNombre: AnsiString; }
var
  lResult: AnsiString;
begin
  try
    lResult := (__Instance as IServiceFlotillas).GasolineroNombre;

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GasolineroNombreResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GeneraCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GeneraCupones(const LoteCuponID: Integer; const ClienteID: Integer; const EstacionID: Integer; const Identificador: Integer; 
                            const Cupones: AGeneraCupon; const TipoCupon: Boolean; const Serie: AnsiString; const aFolio: Integer); }
var
  LoteCuponID: Integer;
  ClienteID: Integer;
  EstacionID: Integer;
  Identificador: Integer;
  Cupones: LibraryFlotillas_Intf.AGeneraCupon;
  TipoCupon: Boolean;
  Serie: AnsiString;
  aFolio: Integer;
  __lObjectDisposer: TROObjectDisposer;
begin
  Cupones := nil;
  try
    __Message.Read('LoteCuponID', TypeInfo(Integer), LoteCuponID, []);
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Identificador', TypeInfo(Integer), Identificador, []);
    __Message.Read('Cupones', TypeInfo(LibraryFlotillas_Intf.AGeneraCupon), Cupones, []);
    __Message.Read('TipoCupon', TypeInfo(Boolean), TipoCupon, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('aFolio', TypeInfo(Integer), aFolio, []);

    (__Instance as IServiceFlotillas).GeneraCupones(LoteCuponID, ClienteID, EstacionID, Identificador, Cupones, TipoCupon, Serie, aFolio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GeneraCuponesResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Cupones);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GenerarFacturas(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GenerarFacturas(const Serie: AnsiString; const fol: Integer; const FechaCorte: DateTime; const FechaContable: DateTime; 
                             const DiaFacturar: Integer; const Magna: Boolean; const Premium: Boolean; const Diesel: Boolean; const EmpleadoID: Integer): Integer; }
var
  Serie: AnsiString;
  fol: Integer;
  FechaCorte: DateTime;
  FechaContable: DateTime;
  DiaFacturar: Integer;
  Magna: Boolean;
  Premium: Boolean;
  Diesel: Boolean;
  EmpleadoID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('fol', TypeInfo(Integer), fol, []);
    __Message.Read('FechaCorte', TypeInfo(DateTime), FechaCorte, [paIsDateTime]);
    __Message.Read('FechaContable', TypeInfo(DateTime), FechaContable, [paIsDateTime]);
    __Message.Read('DiaFacturar', TypeInfo(Integer), DiaFacturar, []);
    __Message.Read('Magna', TypeInfo(Boolean), Magna, []);
    __Message.Read('Premium', TypeInfo(Boolean), Premium, []);
    __Message.Read('Diesel', TypeInfo(Boolean), Diesel, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);

    lResult := (__Instance as IServiceFlotillas).GenerarFacturas(Serie, fol, FechaCorte, FechaContable, DiaFacturar, Magna, Premium, Diesel, EmpleadoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GenerarFacturasResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GuardaAccesos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardaAccesos(const UsuarioID: Integer; const Lista: AnsiString); }
var
  UsuarioID: Integer;
  Lista: AnsiString;
begin
  try
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);
    __Message.Read('Lista', TypeInfo(AnsiString), Lista, []);

    (__Instance as IServiceFlotillas).GuardaAccesos(UsuarioID, Lista);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GuardaAccesosResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GuardaAutorizacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardaAutorizacion(const Autorizacion: TAutoriza): Boolean; }
var
  Autorizacion: LibraryFlotillas_Intf.TAutoriza;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Autorizacion := nil;
  try
    __Message.Read('Autorizacion', TypeInfo(LibraryFlotillas_Intf.TAutoriza), Autorizacion, []);

    lResult := (__Instance as IServiceFlotillas).GuardaAutorizacion(Autorizacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GuardaAutorizacionResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Autorizacion);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GuardaDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardaDatosFactura(const DatosFactura: TDatosFactura); }
var
  DatosFactura: LibraryFlotillas_Intf.TDatosFactura;
  __lObjectDisposer: TROObjectDisposer;
begin
  DatosFactura := nil;
  try
    __Message.Read('DatosFactura', TypeInfo(LibraryFlotillas_Intf.TDatosFactura), DatosFactura, []);

    (__Instance as IServiceFlotillas).GuardaDatosFactura(DatosFactura);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GuardaDatosFacturaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFactura);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GuardarConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardarConsumo(const Consumo: TConsumo): Boolean; }
var
  Consumo: LibraryFlotillas_Intf.TConsumo;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryFlotillas_Intf.TConsumo), Consumo, []);

    lResult := (__Instance as IServiceFlotillas).GuardarConsumo(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GuardarConsumoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_InsertaBitacora(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function InsertaBitacora(const ClienteID: Integer; const UsuarioID: Integer; const Tabla: AnsiString; const Campo: AnsiString; 
                             const ValorAnterior: AnsiString; const ValorNuevo: AnsiString): Boolean; }
var
  ClienteID: Integer;
  UsuarioID: Integer;
  Tabla: AnsiString;
  Campo: AnsiString;
  ValorAnterior: AnsiString;
  ValorNuevo: AnsiString;
  lResult: Boolean;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);
    __Message.Read('Tabla', TypeInfo(AnsiString), Tabla, []);
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('ValorAnterior', TypeInfo(AnsiString), ValorAnterior, []);
    __Message.Read('ValorNuevo', TypeInfo(AnsiString), ValorNuevo, []);

    lResult := (__Instance as IServiceFlotillas).InsertaBitacora(ClienteID, UsuarioID, Tabla, Campo, ValorAnterior, ValorNuevo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'InsertaBitacoraResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Login(const Usuario: AnsiString; const Clave: AnsiString): TLoginInfoF; }
var
  Usuario: AnsiString;
  Clave: AnsiString;
  lResult: LibraryFlotillas_Intf.TLoginInfoF;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Usuario', TypeInfo(AnsiString), Usuario, []);
    __Message.Read('Clave', TypeInfo(AnsiString), Clave, []);

    lResult := (__Instance as IServiceFlotillas).Login(Usuario, Clave);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'LoginResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TLoginInfoF), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ModificarFolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ModificarFolioActual(const Campo: AnsiString; const Serie: AnsiString; const FolioNew: Integer): AnsiString; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  FolioNew: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('FolioNew', TypeInfo(Integer), FolioNew, []);

    lResult := (__Instance as IServiceFlotillas).ModificarFolioActual(Campo, Serie, FolioNew);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ModificarFolioActualResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ObtenCuponValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenCuponValido(const Barras: AnsiString; const Grupo: Integer; const Autoriza: TAutoriza): TCuponValido; }
var
  Barras: AnsiString;
  Grupo: Integer;
  Autoriza: LibraryFlotillas_Intf.TAutoriza;
  lResult: LibraryFlotillas_Intf.TCuponValido;
  __lObjectDisposer: TROObjectDisposer;
begin
  Autoriza := nil;
  lResult := nil;
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('Grupo', TypeInfo(Integer), Grupo, []);
    __Message.Read('Autoriza', TypeInfo(LibraryFlotillas_Intf.TAutoriza), Autoriza, []);

    lResult := (__Instance as IServiceFlotillas).ObtenCuponValido(Barras, Grupo, Autoriza);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ObtenCuponValidoResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TCuponValido), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Autoriza);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_QuemarCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function QuemarCupon(const Consumo: TConsumo; const Barras: AnsiString): Boolean; }
var
  Consumo: LibraryFlotillas_Intf.TConsumo;
  Barras: AnsiString;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryFlotillas_Intf.TConsumo), Consumo, []);
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);

    lResult := (__Instance as IServiceFlotillas).QuemarCupon(Consumo, Barras);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'QuemarCuponResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ReferenciaTarjeta(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ReferenciaTarjeta(const VehiculoID: Integer): AnsiString; }
var
  VehiculoID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);

    lResult := (__Instance as IServiceFlotillas).ReferenciaTarjeta(VehiculoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ReferenciaTarjetaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_Series(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Series(const Campo: AnsiString): AnsiString; }
var
  Campo: AnsiString;
  lResult: AnsiString;
begin
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);

    lResult := (__Instance as IServiceFlotillas).Series(Campo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'SeriesResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_StatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function StatusCupon(const Codigo: AnsiString): AnsiString; }
var
  Codigo: AnsiString;
  lResult: AnsiString;
begin
  try
    __Message.Read('Codigo', TypeInfo(AnsiString), Codigo, []);

    lResult := (__Instance as IServiceFlotillas).StatusCupon(Codigo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'StatusCuponResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_TarjetaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TarjetaConsumo(const Tarjeta: AnsiString; const Consumo: TConsumo): Boolean; }
var
  Tarjeta: AnsiString;
  Consumo: LibraryFlotillas_Intf.TConsumo;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Tarjeta', TypeInfo(AnsiString), Tarjeta, []);
    __Message.Read('Consumo', TypeInfo(LibraryFlotillas_Intf.TConsumo), Consumo, []);

    lResult := (__Instance as IServiceFlotillas).TarjetaConsumo(Tarjeta, Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'TarjetaConsumoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_TarjetasLLave(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TarjetasLLave: aTarjetaLlave; }
var
  lResult: LibraryFlotillas_Intf.aTarjetaLlave;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    lResult := (__Instance as IServiceFlotillas).TarjetasLLave;

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'TarjetasLLaveResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.aTarjetaLlave), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ValidaSecuencias(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaSecuencias(const EstacionID: Integer; const Secuencias: AnsiString): AnsiString; }
var
  EstacionID: Integer;
  Secuencias: AnsiString;
  lResult: AnsiString;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Secuencias', TypeInfo(AnsiString), Secuencias, []);

    lResult := (__Instance as IServiceFlotillas).ValidaSecuencias(EstacionID, Secuencias);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ValidaSecuenciasResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_VehiculoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure VehiculoProducto(const VehiculoID: Integer; const ProductoID: Integer); }
var
  VehiculoID: Integer;
  ProductoID: Integer;
begin
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    (__Instance as IServiceFlotillas).VehiculoProducto(VehiculoID, ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'VehiculoProductoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_REDConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function REDConsumo(const EstacionID: Integer; const Serie: AnsiString; const TicketID: Integer; const AutorizacionID: Integer; 
                        const Importe: Double; const ProductoID: Integer): TDatosTicketConsumo; }
var
  EstacionID: Integer;
  Serie: AnsiString;
  TicketID: Integer;
  AutorizacionID: Integer;
  Importe: Double;
  ProductoID: Integer;
  lResult: LibraryFlotillas_Intf.TDatosTicketConsumo;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('TicketID', TypeInfo(Integer), TicketID, []);
    __Message.Read('AutorizacionID', TypeInfo(Integer), AutorizacionID, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceFlotillas).REDConsumo(EstacionID, Serie, TicketID, AutorizacionID, Importe, ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'REDConsumoResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDatosTicketConsumo), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_REDAutorizaciones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function REDAutorizaciones(const EstacionID: Integer; const BombaID: Integer): AAutorizacion; }
var
  EstacionID: Integer;
  BombaID: Integer;
  lResult: LibraryFlotillas_Intf.AAutorizacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);

    lResult := (__Instance as IServiceFlotillas).REDAutorizaciones(EstacionID, BombaID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'REDAutorizacionesResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.AAutorizacion), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_PrecioProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PrecioProducto(const ProductoID: Integer): Double; }
var
  ProductoID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceFlotillas).PrecioProducto(ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'PrecioProductoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_TiempoAire(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TiempoAire(const EstacionID: Integer; const BombaID: Integer; const Telefono: AnsiString; const ProveedorID: Integer; 
                        const Importe: Double; const CajaID: Integer; const LLave: AnsiString): TTiempoAire; }
var
  EstacionID: Integer;
  BombaID: Integer;
  Telefono: AnsiString;
  ProveedorID: Integer;
  Importe: Double;
  CajaID: Integer;
  LLave: AnsiString;
  lResult: LibraryFlotillas_Intf.TTiempoAire;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('Telefono', TypeInfo(AnsiString), Telefono, []);
    __Message.Read('ProveedorID', TypeInfo(Integer), ProveedorID, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('CajaID', TypeInfo(Integer), CajaID, []);
    __Message.Read('LLave', TypeInfo(AnsiString), LLave, []);

    lResult := (__Instance as IServiceFlotillas).TiempoAire(EstacionID, BombaID, Telefono, ProveedorID, Importe, CajaID, LLave);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'TiempoAireResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TTiempoAire), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CashBack(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CashBack(const EstacionID: Integer; const BombaID: Integer; const Terminal: AnsiString; const Track1: AnsiString; 
                      const Track2: AnsiString; const Importe: Double; const LLave: AnsiString; const CajaID: Integer): TBancaria; }
var
  EstacionID: Integer;
  BombaID: Integer;
  Terminal: AnsiString;
  Track1: AnsiString;
  Track2: AnsiString;
  Importe: Double;
  LLave: AnsiString;
  CajaID: Integer;
  lResult: LibraryFlotillas_Intf.TBancaria;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('Terminal', TypeInfo(AnsiString), Terminal, []);
    __Message.Read('Track1', TypeInfo(AnsiString), Track1, []);
    __Message.Read('Track2', TypeInfo(AnsiString), Track2, []);
    __Message.Read('Importe', TypeInfo(Double), Importe, []);
    __Message.Read('LLave', TypeInfo(AnsiString), LLave, []);
    __Message.Read('CajaID', TypeInfo(Integer), CajaID, []);

    lResult := (__Instance as IServiceFlotillas).CashBack(EstacionID, BombaID, Terminal, Track1, Track2, Importe, LLave, CajaID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CashBackResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TBancaria), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosProducto(const ID: Integer): TProductoF; }
var
  ID: Integer;
  lResult: LibraryFlotillas_Intf.TProductoF;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ID', TypeInfo(Integer), ID, []);

    lResult := (__Instance as IServiceFlotillas).DatosProducto(ID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosProductoResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TProductoF), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_IVAEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function IVAEstacion(const EstacionID: Integer): Double; }
var
  EstacionID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceFlotillas).IVAEstacion(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'IVAEstacionResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosClienteOtros(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosClienteOtros(const Tarjeta: AnsiString; const EstacionID: Integer): TDatosClienteOtros; }
var
  Tarjeta: AnsiString;
  EstacionID: Integer;
  lResult: LibraryFlotillas_Intf.TDatosClienteOtros;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Tarjeta', TypeInfo(AnsiString), Tarjeta, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceFlotillas).DatosClienteOtros(Tarjeta, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosClienteOtrosResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDatosClienteOtros), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ClasificacionCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ClasificacionCliente(const ClienteID: Integer; const Clasificacion: Integer); }
var
  ClienteID: Integer;
  Clasificacion: Integer;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Clasificacion', TypeInfo(Integer), Clasificacion, []);

    (__Instance as IServiceFlotillas).ClasificacionCliente(ClienteID, Clasificacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ClasificacionClienteResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ClasificacionVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ClasificacionVehiculo(const VehiculoID: Integer; const Clasificacion: Integer); }
var
  VehiculoID: Integer;
  Clasificacion: Integer;
begin
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('Clasificacion', TypeInfo(Integer), Clasificacion, []);

    (__Instance as IServiceFlotillas).ClasificacionVehiculo(VehiculoID, Clasificacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ClasificacionVehiculoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_Clasificacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Clasificacion: Integer; }
var
  lResult: Integer;
begin
  try
    lResult := (__Instance as IServiceFlotillas).Clasificacion;

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ClasificacionResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosVerifica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosVerifica(const VehiculoID: Integer): TDatosVerifica; }
var
  VehiculoID: Integer;
  lResult: LibraryFlotillas_Intf.TDatosVerifica;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);

    lResult := (__Instance as IServiceFlotillas).DatosVerifica(VehiculoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosVerificaResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDatosVerifica), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosVerificaReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosVerificaReferencia(const Referencia: AnsiString): TDatosVerifica; }
var
  Referencia: AnsiString;
  lResult: LibraryFlotillas_Intf.TDatosVerifica;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceFlotillas).DatosVerificaReferencia(Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosVerificaReferenciaResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDatosVerifica), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_Rendimiento(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Rendimiento(const EstacionID: Integer; const TicketID: Integer): Double; }
var
  EstacionID: Integer;
  TicketID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TicketID', TypeInfo(Integer), TicketID, []);

    lResult := (__Instance as IServiceFlotillas).Rendimiento(EstacionID, TicketID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'RendimientoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosVerifone(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosVerifone(const VehiculoID: Integer; const Referencia: AnsiString): TDatosVerifoneF; }
var
  VehiculoID: Integer;
  Referencia: AnsiString;
  lResult: LibraryFlotillas_Intf.TDatosVerifoneF;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceFlotillas).DatosVerifone(VehiculoID, Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosVerifoneResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDatosVerifoneF), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CambiaNIP(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CambiaNIP(const Referencia: AnsiString; const NIP: Integer): Boolean; }
var
  Referencia: AnsiString;
  NIP: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);
    __Message.Read('NIP', TypeInfo(Integer), NIP, []);

    lResult := (__Instance as IServiceFlotillas).CambiaNIP(Referencia, NIP);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CambiaNIPResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CambiaClienteConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CambiaClienteConsumo(const EstacionID: Integer; const Ticket: Integer; const Serie: AnsiString; const ClienteID: Integer; 
                                  const VehiculoID: Integer): Boolean; }
var
  EstacionID: Integer;
  Ticket: Integer;
  Serie: AnsiString;
  ClienteID: Integer;
  VehiculoID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Ticket', TypeInfo(Integer), Ticket, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('VehiculoID', TypeInfo(Integer), VehiculoID, []);

    lResult := (__Instance as IServiceFlotillas).CambiaClienteConsumo(EstacionID, Ticket, Serie, ClienteID, VehiculoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CambiaClienteConsumoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CuponManual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CuponManual(const EstacionID: Integer; const TurnoID: Integer; const BombaID: Integer; const Barras: AnsiString): TCuponValido; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  BombaID: Integer;
  Barras: AnsiString;
  lResult: LibraryFlotillas_Intf.TCuponValido;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);

    lResult := (__Instance as IServiceFlotillas).CuponManual(EstacionID, TurnoID, BombaID, Barras);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CuponManualResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TCuponValido), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GeneraFacturasXCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GeneraFacturasXCliente(const ClienteID: Integer; const Productos: AnsiString; const FechaCorte: DateTime; const FechaContable: DateTime; 
                                    const Serie: AnsiString; const aFolio: Integer; const EmpleadoID: Integer): Integer; }
var
  ClienteID: Integer;
  Productos: AnsiString;
  FechaCorte: DateTime;
  FechaContable: DateTime;
  Serie: AnsiString;
  aFolio: Integer;
  EmpleadoID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Productos', TypeInfo(AnsiString), Productos, []);
    __Message.Read('FechaCorte', TypeInfo(DateTime), FechaCorte, [paIsDateTime]);
    __Message.Read('FechaContable', TypeInfo(DateTime), FechaContable, [paIsDateTime]);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('aFolio', TypeInfo(Integer), aFolio, []);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);

    lResult := (__Instance as IServiceFlotillas).GeneraFacturasXCliente(ClienteID, Productos, FechaCorte, FechaContable, Serie, aFolio, EmpleadoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GeneraFacturasXClienteResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ValidaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaConsumo(const Consumo: TConsumo): Integer; }
var
  Consumo: LibraryFlotillas_Intf.TConsumo;
  lResult: Integer;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryFlotillas_Intf.TConsumo), Consumo, []);

    lResult := (__Instance as IServiceFlotillas).ValidaConsumo(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ValidaConsumoResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_ClienteCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ClienteCupon(const Barra: AnsiString): Integer; }
var
  Barra: AnsiString;
  lResult: Integer;
begin
  try
    __Message.Read('Barra', TypeInfo(AnsiString), Barra, []);

    lResult := (__Instance as IServiceFlotillas).ClienteCupon(Barra);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'ClienteCuponResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_QuemarCupon_Manual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function QuemarCupon_Manual(const Consumo: TConsumo; const Barras: AnsiString): Boolean; }
var
  Consumo: LibraryFlotillas_Intf.TConsumo;
  Barras: AnsiString;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryFlotillas_Intf.TConsumo), Consumo, []);
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);

    lResult := (__Instance as IServiceFlotillas).QuemarCupon_Manual(Consumo, Barras);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'QuemarCupon_ManualResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GeneraFacturasXClienteCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GeneraFacturasXClienteCupones(const ClienteID: Integer; const Productos: AnsiString; const FechaCorte: DateTime; const FechaContable: DateTime; 
                                           const EmpleadoID: Integer; const Serie: AnsiString; const aFolio: Integer): Integer; }
var
  ClienteID: Integer;
  Productos: AnsiString;
  FechaCorte: DateTime;
  FechaContable: DateTime;
  EmpleadoID: Integer;
  Serie: AnsiString;
  aFolio: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Productos', TypeInfo(AnsiString), Productos, []);
    __Message.Read('FechaCorte', TypeInfo(DateTime), FechaCorte, [paIsDateTime]);
    __Message.Read('FechaContable', TypeInfo(DateTime), FechaContable, [paIsDateTime]);
    __Message.Read('EmpleadoID', TypeInfo(Integer), EmpleadoID, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('aFolio', TypeInfo(Integer), aFolio, []);

    lResult := (__Instance as IServiceFlotillas).GeneraFacturasXClienteCupones(ClienteID, Productos, FechaCorte, FechaContable, EmpleadoID, Serie, aFolio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GeneraFacturasXClienteCuponesResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DocumentosCupones(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DocumentosCupones(const ClienteID: Integer): TDocumentosCuponesArray; }
var
  ClienteID: Integer;
  lResult: LibraryFlotillas_Intf.TDocumentosCuponesArray;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceFlotillas).DocumentosCupones(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DocumentosCuponesResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDocumentosCuponesArray), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_AroVehiculo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AroVehiculo(const Referencia: AnsiString): AnsiString; }
var
  Referencia: AnsiString;
  lResult: AnsiString;
begin
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceFlotillas).AroVehiculo(Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AroVehiculoResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosFacturaElectronica(const FacturaID: Integer; const GasolineroID: Integer): TFacturaElectronicaF; }
var
  FacturaID: Integer;
  GasolineroID: Integer;
  lResult: LibraryFlotillas_Intf.TFacturaElectronicaF;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('GasolineroID', TypeInfo(Integer), GasolineroID, []);

    lResult := (__Instance as IServiceFlotillas).DatosFacturaElectronica(FacturaID, GasolineroID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosFacturaElectronicaResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TFacturaElectronicaF), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_InsertaFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure InsertaFacturaElectronica(const FacturaElectronicaID: Integer; const CadenaOriginal: Widestring; const SelloDigital: Widestring; 
                                        const FacturaID: Integer; const Vigencia: Boolean; const Enviado: Boolean; const NoCertificado: AnsiString; 
                                        const NoAprobacion: AnsiString; const FechaAprobacion: DateTime); }
var
  FacturaElectronicaID: Integer;
  CadenaOriginal: Widestring;
  SelloDigital: Widestring;
  FacturaID: Integer;
  Vigencia: Boolean;
  Enviado: Boolean;
  NoCertificado: AnsiString;
  NoAprobacion: AnsiString;
  FechaAprobacion: DateTime;
begin
  try
    __Message.Read('FacturaElectronicaID', TypeInfo(Integer), FacturaElectronicaID, []);
    __Message.Read('CadenaOriginal', TypeInfo(Widestring), CadenaOriginal, []);
    __Message.Read('SelloDigital', TypeInfo(Widestring), SelloDigital, []);
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('Vigencia', TypeInfo(Boolean), Vigencia, []);
    __Message.Read('Enviado', TypeInfo(Boolean), Enviado, []);
    __Message.Read('NoCertificado', TypeInfo(AnsiString), NoCertificado, []);
    __Message.Read('NoAprobacion', TypeInfo(AnsiString), NoAprobacion, []);
    __Message.Read('FechaAprobacion', TypeInfo(DateTime), FechaAprobacion, [paIsDateTime]);

    (__Instance as IServiceFlotillas).InsertaFacturaElectronica(FacturaElectronicaID, CadenaOriginal, SelloDigital, FacturaID, Vigencia, Enviado, NoCertificado, NoAprobacion, FechaAprobacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'InsertaFacturaElectronicaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_FolioActual2(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FolioActual2(const Serie: AnsiString; const folio: Integer): Integer; }
var
  Serie: AnsiString;
  folio: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('folio', TypeInfo(Integer), folio, []);

    lResult := (__Instance as IServiceFlotillas).FolioActual2(Serie, folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'FolioActual2Response');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosMonedero(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosMonedero(const FacturaID: Integer; const GasolineroID: Integer): TMonederoElectronico; }
var
  FacturaID: Integer;
  GasolineroID: Integer;
  lResult: LibraryFlotillas_Intf.TMonederoElectronico;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('GasolineroID', TypeInfo(Integer), GasolineroID, []);

    lResult := (__Instance as IServiceFlotillas).DatosMonedero(FacturaID, GasolineroID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosMonederoResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TMonederoElectronico), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_CadenaOriginal(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CadenaOriginal(const FacturaID: Integer; const GasolineroID: Integer): TDataFacturaElectronicaF; }
var
  FacturaID: Integer;
  GasolineroID: Integer;
  lResult: LibraryFlotillas_Intf.TDataFacturaElectronicaF;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('GasolineroID', TypeInfo(Integer), GasolineroID, []);

    lResult := (__Instance as IServiceFlotillas).CadenaOriginal(FacturaID, GasolineroID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'CadenaOriginalResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TDataFacturaElectronicaF), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GOBCHIP(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GOBCHIP(const Referencia: AnsiString): Boolean; }
var
  Referencia: AnsiString;
  lResult: Boolean;
begin
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceFlotillas).GOBCHIP(Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GOBCHIPResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GuardaBitacoraGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardaBitacoraGOB(const BitacoraGOB: TBitacoraGOB): Boolean; }
var
  BitacoraGOB: LibraryFlotillas_Intf.TBitacoraGOB;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  BitacoraGOB := nil;
  try
    __Message.Read('BitacoraGOB', TypeInfo(LibraryFlotillas_Intf.TBitacoraGOB), BitacoraGOB, []);

    lResult := (__Instance as IServiceFlotillas).GuardaBitacoraGOB(BitacoraGOB);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GuardaBitacoraGOBResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(BitacoraGOB);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_GuardarConsumoGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardarConsumoGOB(const Consumo: TConsumo): Boolean; }
var
  Consumo: LibraryFlotillas_Intf.TConsumo;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryFlotillas_Intf.TConsumo), Consumo, []);

    lResult := (__Instance as IServiceFlotillas).GuardarConsumoGOB(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'GuardarConsumoGOBResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_DatosUnidadesGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosUnidadesGOB(const TARJETA: AnsiString): TUnidadesGOB; }
var
  TARJETA: AnsiString;
  lResult: LibraryFlotillas_Intf.TUnidadesGOB;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('TARJETA', TypeInfo(AnsiString), TARJETA, []);

    lResult := (__Instance as IServiceFlotillas).DatosUnidadesGOB(TARJETA);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'DatosUnidadesGOBResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TUnidadesGOB), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_EnviaDatosFacturaGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EnviaDatosFacturaGOB(const DatosFacturaEnviaGOB: TEnviaDatosFacturaGOB): Boolean; }
var
  DatosFacturaEnviaGOB: LibraryFlotillas_Intf.TEnviaDatosFacturaGOB;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  DatosFacturaEnviaGOB := nil;
  try
    __Message.Read('DatosFacturaEnviaGOB', TypeInfo(LibraryFlotillas_Intf.TEnviaDatosFacturaGOB), DatosFacturaEnviaGOB, []);

    lResult := (__Instance as IServiceFlotillas).EnviaDatosFacturaGOB(DatosFacturaEnviaGOB);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'EnviaDatosFacturaGOBResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFacturaEnviaGOB);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceFlotillas_Invoker.Invoke_AutorizaGOB(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AutorizaGOB(const Referencia: AnsiString): TAutorizaGOB; }
var
  Referencia: AnsiString;
  lResult: LibraryFlotillas_Intf.TAutorizaGOB;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceFlotillas).AutorizaGOB(Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryFlotillas', 'ServiceFlotillas', 'AutorizaGOBResponse');
    __Message.Write('Result', TypeInfo(LibraryFlotillas_Intf.TAutorizaGOB), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

initialization
end.
